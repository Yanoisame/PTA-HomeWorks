#################多重输入#################
1.如果每一行输入独立
使用while True与异常处理联用

2.如果输入内容需从头处理到尾
 使用 import sys  s=sys.stdin.read()
 常与 对象.split()联用，保存成列表

3.出现组数与测试数据，一般由外到里进行循环处理


#################文本处理与统计综合大题#################
1.文本处理部分
 A.引入文章，多行输入方法见上
 B.使用循环+分支+转成列表,处理文章不需要的内容(例如标点符号之类的)
 for 循环变量 in 循环对象:
      if not i.isalnum() 不是字母或数字的话
      循环对象 = 循环对象.replace(循环变量, " ") 把文本中不是字母或数字替换成空格，方便后期分割
 新的变量 = 循环对象.split() 保存好处理好的文本，并以空格分割成列表

2.统计部分
 A.创建空字典
 B.使用循环+字典方法 在空字典中统计出现频率
  for 循环变量 in 处理好的文本对象:
  空字典的变量名[循环变量] = 空字典.get(循环变量, 返回值(统计中常用0)) + 1  以循环变量创建字典key，单词数量为value(通过get函数增加数量，没有返回0，存在就返回字典对应的值，像累加一样)

3.排序部分,常用sorted函数与lambda函数(决定排序规则)联用
 A.将上述统计好的字典用items解包成元组放入sorted函数中
 变量 = sorted(统计好的字典.items, key = lambda [参数]:[表达式])

 B.设定排序规则(key)
  key = lambda [参数]:[表达式]  (多种规则时，表达式需圆括号包起来)
  表达式:统计综合大题中，因为是元组，可以通过索引方式确定表达式，从而指定规则
        其他排序中，常用切片，逆向切片或者相关函数(比如len，max,sum)，来确定表达式，从而指定排序规则
        例如：key=lambda x: len(x) 以长度决定排序方式
   又或者:max([10, 78, 39, 5, 901, 551], key=lambda x:sum(map(int, str(x)))) 每一位数数字相加的最大值作为排序规则
